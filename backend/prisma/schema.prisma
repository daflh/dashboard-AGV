generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model agents {
  id               Int        @id @default(autoincrement())
  name             String?    @db.VarChar(255)
  description      String?    @db.VarChar(255)
  ip_address       String     @db.VarChar(255)
  hsm_key          String?    @db.VarChar(255)
  site_id          Int
  company_id       Int?       @default(1)
  last_maintenance DateTime?  @default(dbgenerated("'2024-10-15 00:00:00'")) @db.Timestamp(0)
  next_maintenance DateTime?  @default(dbgenerated("'2024-10-20 00:00:00'")) @db.Timestamp(0)
  created_at       DateTime?  @default(now()) @db.Timestamp(0)
  updated_at       DateTime?  @default(now()) @db.Timestamp(0)
  sites            sites      @relation(fields: [site_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "agents_ibfk_1")
  companies        companies? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "agents_ibfk_2")

  @@index([company_id], map: "company_id")
  @@index([site_id], map: "site_id")
}

model companies {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  email      String    @db.VarChar(255)
  address    String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  agents     agents[]
  maps       maps[]
  sites      sites[]
  users      users[]
}

model logs {
  id          Int      @id @default(autoincrement())
  user_id     Int
  entity_type String   @db.VarChar(50)
  entity_id   Int
  action      String   @db.VarChar(50)
  description String?  @db.Text
  type        String   @db.VarChar(50)
  created_at  DateTime @default(now()) @db.Timestamp(0)
  users       users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "logs_ibfk_1")

  @@index([user_id], map: "user_id")
}

model maps {
  id         Int       @id @default(autoincrement())
  file_name  String    @db.VarChar(255)
  file_path  String    @db.VarChar(255)
  company_id Int
  site_id    Int
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  companies  companies @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "maps_ibfk_1")
  sites      sites     @relation(fields: [site_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "maps_ibfk_2")

  @@index([company_id], map: "company_id")
  @@index([site_id], map: "site_id")
}

model sites {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  company_id Int
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  agents     agents[]
  maps       maps[]
  companies  companies @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sites_ibfk_1")

  @@index([company_id], map: "company_id")
}

model users {
  id         Int       @id @default(autoincrement())
  username   String    @unique(map: "username") @db.VarChar(255)
  email      String    @unique(map: "email") @db.VarChar(255)
  role       String    @db.VarChar(50)
  password   String    @db.VarChar(255)
  company_id Int
  status     String    @db.VarChar(50)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  logs       logs[]
  companies  companies @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_ibfk_1")

  @@index([company_id], map: "company_id")
}
